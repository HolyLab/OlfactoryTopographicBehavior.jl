var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = OlfactoryTopographicBehavior","category":"page"},{"location":"#OlfactoryTopographicBehavior","page":"Home","title":"OlfactoryTopographicBehavior","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OlfactoryTopographicBehavior.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OlfactoryTopographicBehavior]","category":"page"},{"location":"#OlfactoryTopographicBehavior.collect_by_trialtype-Tuple{Any, Any, AbstractVector{TrialData}}","page":"Home","title":"OlfactoryTopographicBehavior.collect_by_trialtype","text":"collect_by_trialtype(ispos::Function, data, tds::AbstractVector{TrialData})\n\nCategorize data by trial type (true positive, true negative, false positive, false negative). ispos(td) should return true if this trial should be a positive (lick) response.\n\n\n\n\n\n","category":"method"},{"location":"#OlfactoryTopographicBehavior.is_lick-Tuple{TrialData}","page":"Home","title":"OlfactoryTopographicBehavior.is_lick","text":"is_lick(td::TrialData; deadline=4s)\n\nReturn true if the animal licked. Only consider licks occurring after the cue time and within deadline thereafter.\n\n\n\n\n\n","category":"method"},{"location":"#OlfactoryTopographicBehavior.session_frame-Tuple{Any}","page":"Home","title":"OlfactoryTopographicBehavior.session_frame","text":"dfr = session_frame(ai; odortiming=1, vaccuum=2, soundlick=3, camera=4, sniff=5, lickometer=6, odordirection=7, lickbinary=8, fs=1000.0f0 Hz)\n\nConstruct a trial session DataFrame from an input matrix ai. The keyword arguments provide the column index for each signal. The return value is a DataFrameRate which also encodes the sampling frequency (as supplied by fs).\n\n\n\n\n\n","category":"method"},{"location":"#OlfactoryTopographicBehavior.trialdatas-Tuple{DataFrames.DataFrame}","page":"Home","title":"OlfactoryTopographicBehavior.trialdatas","text":"trialdatas(dfr::DataFrameRate; fcarrierlick=60Hz, soundduration=1s, trialoffset=-1s, trialduration=10s, minlickduration=0.005s, maxlickamp=0.1, lohi_sound=(1, 3), lohi_odor=(0.5, 3.0), tprecision=0.1)\ntrialdatas(df::DataFrame; fs=1000.0f0 Hz, fcarrierlick=60Hz, soundduration=1s, trialoffset=-1s, trialduration=10s, minlickduration=0.005s, maxlickamp=0.1, lohi_sound=(1, 3), lohi_odor=(0.5, 3.0), tprecision=0.1)\n\nCollect data on all trials in df, which should be a DataFrame with colums \"soundlick\", \"lickometer\", \"odortiming\", and \"odordirection\". Each should be an analog signal with timing data. Supplying dfr provides the DataFrame and the sampling rate.\n\nThe keyword arguments allow you to set:\n\nfs: the sampling frequency (affects conversion to physical units)\nfcarrierlick: the frequency of the carrier signal for lick detection (grounding this signal indicates a lick)\nsoundduration: the expected duration of the sound pulse. This is used to find trials.\ntprecision: fractional \"slop\" in timing permitted for identifying a sound pulse.\ntrialoffset: start of the trial relative to the sound pulse onset\ntrialduration: length of the trial\nminlickduration: the minimum length of grounding the lick carrier signal to count as a lick\nmaxlickamp: maximum allowed deviation of carrier voltage during a lick (as a fraction of lick carrier stddev)\nlohi_sound: voltage thresholds for sound lo and hi (a sound pulse starts when this goes hi)\nlohi_odor: voltage threshold for odor timing (odor pulse starts when this goes hi)\n\n\n\n\n\n","category":"method"}]
}
